function P = rmpaths(varargin)
% RMPATHS Remove directory from search path recursively
%
%   RMPATHS(DIR1, DIR2, ...) recursively removes the directories DIR1, DIR2 from
%   the search path. Recursively means, if there is a 'finish.m' script or
%   function in the directory, it will be called.
%
%   P = RMPATHS(...) returns the path prior to removing the specified paths.
%
%   Outputs:
%
%   P                   The path prior to removing the specified paths.



%% File information
% Author: Philipp Tempel <philipp.tempel@isw.uni-stuttgart.de>
% Date: 2021-11-17
% Changelog:
%   2021-11-17
%       * Remove empty paths that may appear in path array
%   2021-11-02
%       * Fix error removing paths if `DIR` was a relative path
%       * Add `NARGINCHK` and `NARGOUTCHK`
%       * Add section to properly parse arguments
%       * Use `CONTAINS` instead of `STRFIND` where recommended by MATLAB
%   2017-03-12
%       * Initial release



%% Parse arguments


% RMPATHS(DIR)
% RMPATHS(DIR1, ..., DIRN)
narginchk(1, Inf);

% RMPATHS(___)
% P = RMPATHS(___)
nargoutchk(0, 1);

% P = RMPATHS(___)
% Return old paths?
if nargout > 0
    P = path();
    
end



%% Do your code magic here

% Get the paths to be removed
cePaths = varargin;
% Get list of all paths registered
cePathList = regexp(path, pathsep, 'Split');

% Get the current debug stack so we don't recursively call startup of the same
% file
stStack = dbstack('-completenames');
% Get all the filenames from the current stack so that access later on is easier
ceFileStack = {stStack.file};

% Loop over every path-to-be-removed
for iPath = numel(cePaths):-1:1
    % Extract current path form list of paths (faster because we'll be needing
    % it a few more times)
    chPath = cePaths{iPath};
    
    % If the path given is a string generated by genpath, then we will need to
    % split that by ';'
    if contains(chPath, pathsep)
        % Split this path into each of its subpaths
        cePathPathList = regexp(chPath, pathsep, 'Split');
        cePathPathList(cellfun(@isempty, cePathPathList)) = [];
        
        % Try removing each of the paths inside this path list separately
        try
            rmpaths(cePathPathList{:});
            
        catch ME
            warning(ME.message);
            
        end
        
    % Just a single path given
    else
        % Get path's canonical name i.e., turn any relative path into an absolute
        % path
        % @see http://stackoverflow.com/questions/18395892/how-to-resolve-a-relative-directory-path-to-canonical-path-in-matlab-octave
        pinfo = what(chPath);
        if ~isempty(pinfo)
          chPath = pinfo.path;
        end
        
        % Only remove the path if it is on the path
        if any(ismember(chPath, cePathList))
            % Try removing the folder from the path. If things fail here, we'll
            % be save because we're just TRYing to remove the folder so a
            % failure won't break the whole script
            try
                % Finish file path
                chFinishFile = fullfile(chPath, 'finish.m');
                % Finish file exists and we're not calling the same finish file
                % that we are currently being called from?
                if 0 ~= exist(chFinishFile, 'file') && ~ismember(chFinishFile, ceFileStack)
                    % Execute it
                    run(chFinishFile);
                    
                end
                
                % Remove path from PATH
                rmpath(chPath);
                
            catch ME
                warning(ME.message);
                
            end
            
        end
        
    end
    
end


end

%------------- END OF CODE --------------
% Please send suggestions for improvement of this file to the original author as
% can be found in the header. Your contribution towards improving this function
% will be acknowledged in the "Changes" section of the header.
