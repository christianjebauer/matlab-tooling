function P = addpaths(varargin)
% ADDPATHS Add directory to search path recursively.
%
%   ADDPATHS(DIR1, DIR2, ...) adds the paths DIR1, DIR2, etc to the search path
%   and, one at a time, calls the startup script in the respective folder, if
%   there is one.
%
%   P = ADDPATHS(...) returns the path prior to removing the specified paths.
%
%   Outputs:
%
%   P                   The path prior to adding the specified paths.



%% File information
% Author: Philipp Tempel <philipp.tempel@isw.uni-stuttgart.de>
% Date: 2017-03-12
% Changelog:
%   2017-03-12
%       * Initial release



%% Do your code magic here
% Return old paths?
if nargout > 0
    P = path;
end

% Get the paths to be added
cePaths = varargin;
% Get list of all paths registered
cePathList = regexp(path, pathsep, 'Split');

% Get the current debug stack so we don't recursively call startup of the same
% file
stStack = dbstack('-completenames');
% Get all the filenames from the current stack so that access later on is easier
ceFileStack = {stStack.file};

% Loop over every path-to-be-added
for iPath = numel(cePaths):-1:1
    % Extract current path form list of paths (faster because we'll be needing
    % it a few more times)
    chPath = cePaths{iPath};
    
    % If the path given is a string generated by genpath, then we will need to
    % split that by ';'
    if strfind(chPath, pathsep)
        % Split this path into each of its subpaths
        cePathPathList = regexp(chPath, pathsep, 'Split');
        
        % Try adding each of the paths inside this path list separately
        try
            registerPaths(cePathPathList{:});
        catch ME
            warning(ME.message);
        end
    % Just a single path given
    else
        % Get path's canonical name i.e., turn any relative path into an absolute
        % path
        % @see http://stackoverflow.com/questions/18395892/how-to-resolve-a-relative-directory-path-to-canonical-path-in-matlab-octave
        jFile = java.io.File(chPath);
        chPath = char(jFile.getCanonicalPath);

        % Only add the path if it isn't already added
        if ( ~all(ismember(chPath, cePathList)) && 0 ~= exist(chPath, 'dir') )
            % Try adding the folder to the path. If things fail here, we'll be save
            % because we're just TRYing to add the folder so a failure won't break
            % the whole script
            try
                % Add the path
                addpath(chPath);
                % Startup file path
                chStartupFile = fullfile(chPath, 'startup.m');
                % Startup file exists and we're not calling the same startup file
                % that we are currently being called from?
                if 0 ~= exist(chStartupFile, 'file') && ~ismember(chStartupFile, ceFileStack)
                    % Execute it
                    run(chStartupFile);
                end
            catch ME
                warning(ME.message);
            end
        end
    end
end


end

%------------- END OF CODE --------------
% Please send suggestions for improvement of this file to the original author as
% can be found in the header Your contribution towards improving this function
% will be acknowledged in the "Changes" section of the header
