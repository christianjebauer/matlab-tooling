function renameRobotVariables(RobotName)

%% Parse input
% Load the robot configuration
load(RobotName);

Robot_Name = RobotName;


%% Define the mapping of variables to rename
% First column contains the original (old) variable name, and second column the
% target (new) variable name
ceMapping = {'cfg_cable_ref', 'Cable_LengthOffset'; ...
    'CableLengthOffsets', 'Cable_LengthOffset'; ...
    'cfg_gears_a', 'Winch_Positions'; ...
    'WinchPositions', 'Winch_Positions'; ...
    'cfg_gears_rotation', 'Winch_Orientations'; ...
    'WinchOrientations', 'Winch_Orientations'; ...
    'cfg_platform_b', 'Platform_Anchors'; ...
    'PlatformAnchors', 'Platform_Anchors'; ...
    'cfg_platform_inertia', 'Platform_Inertia'; ...
    'PlatformInertia', 'Platform_Inertia'; ...
    'cfg_platform_mass', 'Platform_Mass'; ...
    'PlatformMass', 'Platform_Mass'; ...
    'cfg_pulley_radius', 'Pulley_Radius'; ...
    'PulleyRadius', 'Pulley_Radius'; ...
    'cfg_platform_position', 'Platform_InitialPosition'; ...
    'cfg_tendons_c', 'CableModel_Stiffness'; ...
    'CableStiffness', 'CableModel_Stiffness'; ...
    'cfg_tendons_d', 'CableModel_Damping'; ...
    'CableDamping', 'CableModel_Damping'; ...
    'cfg_tendons_forcelimits', 'Cable_ForceLimits'; ...
    'cfg_tendonds_q_cReff', 'CableModel_ReferenceLength'; ...
    'stCableProps', 'Cable_Properties'; ...
    'CableProperties', 'Cable_Properties'};



%% Rename
% Loop over all the rename-mappings
for iMapping = 1:size(ceMapping, 1)
    % Skip variables that do not exist
    if ~exist(ceMapping{iMapping, 1}, 'var')
        continue
    end
    
    % Rename the variable
    eval(sprintf('%s = %s;', ceMapping{iMapping, 2}, ceMapping{iMapping, 1}));
    
    % Clear the old variable
    clear(ceMapping{iMapping, 1});
end



%% Cleanup and saving
% Clear variables we have created in this script
clear ans ceMapping iMapping RobotName

% And save the file
save(Robot_Name);

end